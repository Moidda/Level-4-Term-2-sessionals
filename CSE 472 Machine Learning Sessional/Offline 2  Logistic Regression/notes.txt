def predict(self, X):
    """
    function for predicting labels of for all datapoint in X
    apply majority voting
    :param X:
    :return:
    """
    y_pred = self.estimators[0].predict(X)
    predictions = y_pred
    for i in range(1, self.n_estimator):
        y_pred = self.estimators[i].predict(X)
        predictions = np.append(predictions, y_pred, axis=1)

    summaryPredictions = np.empty(y_pred.shape, dtype=int)
    for i in range(predictions.shape[0]):
        onecount = 0
        zerocount = 0
        for j in range(predictions.shape[1]):
            if predictions[i][j] == 0:
                zerocount += 1
            else:
                onecount += 1
            
            if onecount > zerocount:
                summaryPredictions[i] = np.array([0])
            else:
                summaryPredictions[i] = np.array([1])

    return summaryPredictions